# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    # Locale related parameters
    locale: lt
    locales:
        - en
        - lt

    # Menu configurations
    menu_config.admin:
        events:
            title: Events
            route: event_index
            child_routes:
                - event_create
                - event_create_multi
                - event_show
                - event_delete
                - event_update_multi
                - event_save_category_order
                - event_times_update
                - workshop_create
                - event_update
                - category_create
                - category_update
                - workshop_update
                - workshop_registrations
                - workshop_update_times
        forms:
            title: Forms
            route: form_index
            child_routes:
                - form_create
                - form_show
                - form_update
        profile:
            title: Profile
            route: user_profile
    menu_config.user:
        index:
            title: Home
            route: index
        login:
            title: Login
            route: login
        register:
            title: Register
            route: register
            toggle: user_creation_enabled

    # Feature toggles
    user_creation_enabled: false
    shared_events: true  # Events and registrations will be visible for all users

    # else
    sender_email: smd@kkarolis.lt

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
